{"version":3,"sources":["components/SideNav/SideNav.js","constants/About.js","components/About/About.js","components/SkillCard/SkillCard.js","constants/Skills.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","constants/Projects.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleClick","className","src","alt","onClick","about","heading","quote","bio","About","props","SkillCard","skill","skills","techSkills","industryKnowledge","interpersonalSkills","Skills","map","key","ProjectCard","project","name","description","href","link","projects","projectList","Projects","SectionContainer","selectedHeading","selectedQuote","selectedSection","Portfolio","App","sectionName","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b2ab95ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport './sidenav.css';\r\nexport const SideNav =({handleClick})=>\r\n{\r\n    return(\r\n        <div className=\"sidenav\">\r\n            <img\r\n                src=\"https://i.ibb.co/j8WDzdr/pic.jpg\"\r\n                className='avatar'\r\n                alt='photo'/>\r\n            <h2 className=\"main-name\">Sahil Soni</h2>\r\n            <p className='subtitle'>“Courage Is a Love Affair with the Unknown”― Osho</p>\r\n            <div className=\"section-list\">\r\n                <p className=\"section-list-element\" onClick={()=>handleClick(\"about\")} >About Me</p>\r\n                <p className=\"section-list-element\" onClick={()=>handleClick(\"skills\")} >Skills</p>\r\n                <p className=\"section-list-element\" onClick={()=>handleClick(\"projects\") }>Projects</p>\r\n            </div>\r\n        </div>\r\n    ) \r\n} ","export const about = {\r\n    heading: \"About Me\",\r\n    quote : \"I believe noone is born for something, we are what we want us to be !!\",\r\n    bio : \"I can Code and it took me a year to realise that. \\n\\nActually i can do anything if i see something in it. \\n\\nWanna Chess ?\\n\\nLinkedIn : lialh4 \\nIG : iamsahilsoni \"\r\n};","import React from 'react';\r\nimport './about.css';\r\nimport {about} from '../../constants/About';\r\nexport const About =(props)=>\r\n{\r\n    return (\r\n        <div className=\"about-container\">\r\n            {about.bio}\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './skill-card.css';\r\n\r\nexport const SkillCard = ({ skill }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            {skill}\r\n        </div>\r\n    )\r\n}","export const skills = {\r\n    heading: \"Skills\",\r\n    quote: \"Skills are just dedication for a week.\",\r\n    techSkills: [\r\n        \"C++\",\r\n        \"C\",\r\n        \"CUDA\",\r\n        \"JavaScript\",\r\n        \"NodeJS\",\r\n        \"ReactJS\",\r\n        \"Python\",\r\n        \"HTML\",\r\n        \"CSS\",\r\n        \"OpenCV\"\r\n    ],\r\n    industryKnowledge: [\r\n        \"Fresher !!!! Hire ME\",\r\n    ],\r\n    interpersonalSkills: [\r\n        \"Communication\",\r\n        \"Teaching\",\r\n        \"Time Management\",\r\n        \"Problem Solving\",\r\n        \"Management\",\r\n    ]\r\n};","import React from 'react';\r\n\r\nimport { SkillCard } from './../SkillCard/SkillCard';\r\nimport {skills} from '../../constants/Skills'\r\nimport './skills.css';\r\n\r\nexport const Skills = () => {\r\n    return (\r\n        <div className=\"skills-container\">\r\n            <h3>Industry Knowledge</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.industryKnowledge.map(skill => <SkillCard key={skill} skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Tech Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.techSkills.map(skill => <SkillCard key={skill} skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Interpersonal Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.interpersonalSkills.map(skill => <SkillCard key={skill} skill={skill} />)\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './project-card.css';\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Name:</b> {project.name}</p>\r\n            <p><b>Description:</b> {project.description}</p>\r\n            <p><b>Link:</b> <a href={project.link}>{project.link}</a> </p>\r\n        </div>\r\n    )\r\n}","export const projects = {\r\n    heading: \"Projects\",\r\n    quote: \"Projects are fun, if we are paid for it.\\nNot a Pro in making Website. Problem Solving is my priority always.\",\r\n    projectList: [\r\n        {\r\n            name: \"This App || React \",\r\n            description: \"Used React for making this Resume cum Portfolio. Simple App but i learnt about props and states and other important things. so basically i can make basic react website now.\",\r\n            link: \" ) \"\r\n        }, \r\n        {\r\n            name: \"Face Attendance || OpenCV \",\r\n            description: \"After Learning Python, i came accross this cool Library OpenCV. So i thought of new features in this. Can be used by Teachers to record Attendance , just need one photo of Student, and Excel of students present along with time is generated.\",\r\n            link: \"https://github.com/iamsahilsoni/Face_Attendance\"\r\n        },\r\n        {\r\n            name: \"Deep learning based image classification for intestinal hemorrhage || Research Paper || CNN || ML\",\r\n            description : \"CNN model is trained with positive images of blood clot of intestine. Now with Camera inbuilt in capsule is used to click images and that images are sent to model to detect. Saves time. Conventional model requires doctor to examine each images captured.\",  \r\n            link :\"https://rdcu.be/b5BVO\"\r\n        }\r\n    ]\r\n}","import React from 'react';\r\n\r\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\r\nimport {projects} from '../../constants/Projects';\r\nimport './projects.css';\r\n\r\nexport const Projects = () => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    projects.projectList.map(project => <ProjectCard project={project} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './section-container.css';\r\nimport { About } from '../About/About';\r\nimport {Skills} from '../Skills/Skills'\r\nimport {Projects} from '../Projects/Projects'\r\nexport const SectionContainer =({selectedHeading,selectedQuote,selectedSection})=>\r\n{\r\n    return (\r\n        <div className=\"section-container\">\r\n            <div className=\"section-heading-container\">\r\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\r\n                <p className=\"main-quote\">{selectedQuote}</p>\r\n            </div>\r\n            <div>\r\n                {\r\n                    {\r\n                        \"about\":<About/>,\r\n                        \"skills\":<Skills/>,\r\n                        \"projects\":<Projects/>\r\n                    }[selectedSection]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './portfolio.css';\r\nimport { SideNav } from '../SideNav/SideNav';\r\nimport { SectionContainer } from '../SectionContainer/SectionContainer';\r\n\r\nexport const Portfolio=({selectedHeading,selectedQuote,selectedSection,handleClick})=>\r\n{\r\n    return (\r\n        <div className=\"portfolio-container\">\r\n            <div className=\"sidenav-container\">  \r\n                <SideNav\r\n                    handleClick={handleClick}\r\n                    />\r\n            </div>\r\n            <div className=\"main-section-container\"> \r\n                <SectionContainer \r\n                    selectedHeading={selectedHeading}\r\n                    selectedQuote={selectedQuote}\r\n                    selectedSection={selectedSection}\r\n                    />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React,{Component} from 'react';\nimport './App.css';\nimport { Portfolio } from './Portfolio/Portfolio';\nimport { about } from '../constants/About';\nimport { skills } from '../constants/Skills';\nimport {projects } from '../constants/Projects';\nexport class App extends Component \n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.state={\n\t\t\tselectedSection:\"\",\n\t\t\tselectedHeading:\"\",\n\t\t\tselectedQuote:\"\",\n\t\t\tabout,skills,projects\n\t\t}\n\t}\n\n\tcomponentDidMount ()\n\t{\n\t\tthis.setState({\n\t\t\tselectedSection:\"about\",\n\t\t\tselectedHeading:about.heading,\n\t\t\tselectedQuote:about.quote,\n\t\t})\n\t}\n\thandleClick=(sectionName)=>\n\t{\n\t\tthis.setState({\n\t\t\tselectedSection:sectionName,\n\t\t\tselectedHeading:this.state[sectionName].heading,\n\t\t\tselectedQuote:this.state[sectionName].quote,\n\t\t})\n\t}\n\trender()\n\t{\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Portfolio\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\n\t\t\t\t\tselectedSection={this.state.selectedSection}\n\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}